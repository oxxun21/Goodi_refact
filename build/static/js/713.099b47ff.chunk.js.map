{"version":3,"file":"static/js/713.099b47ff.chunk.js","mappings":"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","sources":["components/PostProductWriting/UIcomponents/UpdatePostWriting.jsx","components/PostProductWriting/UIcomponents/UpdateProductWriting.jsx","components/PostProductWriting/UpdateTotalUI.jsx","pages/ProductUpdate.jsx"],"sourcesContent":["import React from \"react\";\r\nimport * as T from \"../writingUI.styled\";\r\n\r\nimport { Textarea, Button } from \"./../../common\";\r\n\r\nexport default function UpdatePostWriting({ handleInputChange, data }) {\r\n  return (\r\n    <T.ContentUploadWrap>\r\n      <T.InputWrap>\r\n        <T.Label>게시글 내용</T.Label>\r\n        <Textarea width=\"100%\" height=\"300px\" placeholder=\"게시글 내용을 입력해주세요\" value={data.content} onChange={handleInputChange} name=\"content\" maxLength={100} required />\r\n      </T.InputWrap>\r\n\r\n      <Button type=\"submit\" height=\"56px\" text={\"게시글 업로드 하기\"} br=\"4px\" />\r\n    </T.ContentUploadWrap>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as T from \"../writingUI.styled\";\r\n\r\nimport { Input, Textarea, Button } from \"./../../common\";\r\n\r\nexport default function UpdateProductWriting({ handleInputChange, data }) {\r\n  return (\r\n    <T.ContentUploadWrap>\r\n      <T.InputWrap>\r\n        <T.Label>상품명</T.Label>\r\n        <Input width=\"100%\" name=\"itemName\" placeholder=\"상품명을 입력해주세요\" type=\"text\" onChange={handleInputChange} value={data.itemName} required />\r\n      </T.InputWrap>\r\n\r\n      <T.InputWrap>\r\n        <T.Label>상품가격</T.Label>\r\n        <Input width=\"100%\" type=\"number\" placeholder=\"상품가격을 입력해주세요\" name=\"price\" value={data.price} onChange={handleInputChange} required />\r\n      </T.InputWrap>\r\n\r\n      <T.InputWrap>\r\n        <T.Label>상품 설명</T.Label>\r\n        <Textarea width=\"100%\" height=\"100px\" placeholder=\"상품에 대한 설명을 입력해주세요\" value={data.link} onChange={handleInputChange} name=\"link\" required />\r\n      </T.InputWrap>\r\n\r\n      <Button type=\"submit\" height=\"56px\" text={\"상품 업로드 하기\"} br=\"4px\" />\r\n    </T.ContentUploadWrap>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as T from \"./writingUI.styled\";\r\nimport { useLocation, useParams } from \"react-router\";\r\n\r\nimport ImageSection from \"./UIcomponents/ImageSection\";\r\nimport UpdatePostWriting from \"./UIcomponents/UpdatePostWriting\";\r\nimport UpdateProductWriting from \"./UIcomponents/UpdateProductWriting\";\r\n\r\nexport default function UpdateTotalUI(props) {\r\n  const { src, subtext, data, setData, send, imageWrap, setImageWrap, errorMSG } = props;\r\n\r\n  const location = useLocation();\r\n  const locationID = useParams();\r\n\r\n  const handleInputChange = async (e) => {\r\n    const { name, value } = e.target;\r\n    setData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <T.PostingWrap>\r\n      <T.PostUiWrap>\r\n        <h2 className=\"a11y-hidden\">수정 페이지</h2>\r\n        <img src={src} alt={src} />\r\n        <p>{subtext}</p>\r\n        {errorMSG && <p>{errorMSG}</p>}\r\n\r\n        <T.UploadWrap onSubmit={send}>\r\n          <ImageSection imageWrap={imageWrap} setImageWrap={setImageWrap} />\r\n\r\n          <T.Line />\r\n\r\n          {location.pathname === `/post/${locationID.posting_id}` && <UpdatePostWriting handleInputChange={handleInputChange} data={data} />}\r\n\r\n          {location.pathname === `/product/${locationID.product_id}` && <UpdateProductWriting data={data} handleInputChange={handleInputChange} />}\r\n        </T.UploadWrap>\r\n      </T.PostUiWrap>\r\n    </T.PostingWrap>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\n//component\r\nimport Layout from \"../layout/Layout\";\r\nimport UpdateTotalUI from \"../components/PostProductWriting/UpdateTotalUI\";\r\n\r\n// 이미지\r\nimport ProductUpload from \"../assets/Prodcut_upload.svg\";\r\n\r\n// API\r\nimport { productGetUpdateAPI, productPutAPI } from \"../api\";\r\n\r\nexport default function ProductUpdate() {\r\n  const { product_id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [imageWrap, setImageWrap] = useState([]);\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProduct = async () => {\r\n      const response = await productGetUpdateAPI(product_id);\r\n      setData({\r\n        id: response.product.id,\r\n        itemName: response.product.itemName,\r\n        price: response.product.price,\r\n        link: response.product.link,\r\n        itemImage: response.product.itemImage,\r\n      });\r\n      setImageWrap(response.product.itemImage.split(\",\"));\r\n    };\r\n    fetchProduct();\r\n  }, []);\r\n\r\n  const productUpdateSend = async (e) => {\r\n    e.preventDefault();\r\n    const updatedProductData = {\r\n      product: {\r\n        id: data.id,\r\n        itemName: data.itemName,\r\n        price: data.price,\r\n        link: data.link,\r\n        itemImage: imageWrap.join(\",\"),\r\n      },\r\n    };\r\n\r\n    await productPutAPI(product_id, updatedProductData);\r\n\r\n    navigate(`/productDetail/${product_id}`);\r\n  };\r\n\r\n  return (\r\n    <Layout reduceTop=\"true\">\r\n      {data && (\r\n        <UpdateTotalUI\r\n          src={ProductUpload}\r\n          subtext=\"상품을 수정해주세요\"\r\n          data={data}\r\n          send={productUpdateSend}\r\n          setData={setData}\r\n          description={data.link}\r\n          setImageWrap={setImageWrap}\r\n          imageWrap={imageWrap}\r\n        />\r\n      )}\r\n    </Layout>\r\n  );\r\n}\r\n"],"names":["UpdatePostWriting","_ref","handleInputChange","data","_jsxs","T","children","_jsx","Textarea","width","height","placeholder","value","content","onChange","name","maxLength","required","Button","type","text","br","UpdateProductWriting","Input","itemName","price","link","UpdateTotalUI","props","src","subtext","setData","send","imageWrap","setImageWrap","errorMSG","location","useLocation","locationID","useParams","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","_e$target","wrap","_context","prev","next","target","prevData","_objectSpread","_defineProperty","stop","_x","apply","arguments","className","alt","onSubmit","ImageSection","pathname","concat","posting_id","product_id","ProductUpdate","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","useEffect","fetchProduct","response","productGetUpdateAPI","sent","id","product","itemImage","split","productUpdateSend","_ref2","_callee2","updatedProductData","_context2","preventDefault","join","productPutAPI","Layout","reduceTop","ProductUpload","description"],"sourceRoot":""}