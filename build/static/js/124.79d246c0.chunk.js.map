{"version":3,"file":"static/js/124.79d246c0.chunk.js","mappings":"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","sources":["assets/post_menu.svg","assets/product_null.svg","components/NoPostsUI.tsx","components/Product/ProductCard.tsx","components/ProfileCommon/IntroUI.tsx","assets/Followers.svg","assets/Following.svg","components/ProfileCommon/Follow.tsx","components/ProfileCommon/FollowListUI.tsx","components/ProfileCommon/UpdateProfile.tsx","layout/profileLayout/ProfileLeftUI.tsx","components/Product/ProductCardList.tsx","components/Post/PostCard.tsx","components/Post/PostCardList.tsx","assets/point-edge-profile.svg","assets/Author-Products.svg","assets/Author-Posts.svg","layout/profileLayout/ProfileRightUI.tsx","style/skeletonUI/skeletonPage/ProfileSkeleton.tsx","pages/Profile.tsx","style/skeletonUI/skeletonPage/PostSkeleton.tsx"],"sourcesContent":["var _circle, _circle2, _circle3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPostMenu(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 20,\n    cy: 28,\n    r: 2,\n    fill: \"black\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 28,\n    cy: 28,\n    r: 2,\n    fill: \"black\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 36,\n    cy: 28,\n    r: 2,\n    fill: \"black\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPostMenu);\nexport default __webpack_public_path__ + \"static/media/post_menu.ae953247306fd8a9101d34fe63ef0088.svg\";\nexport { ForwardRef as ReactComponent };","var _rect, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgProductNull(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 72,\n    height: 70,\n    viewBox: \"0 0 72 70\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 72,\n    height: 21.0547,\n    rx: 1,\n    fill: \"#E2E2E2\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M3.99902 24.0625C3.44674 24.0625 2.99902 24.5102 2.99902 25.0625V69C2.99902 69.5523 3.44674 70 3.99903 70H67.4536C68.0059 70 68.4536 69.5523 68.4536 69V25.0625C68.4536 24.5102 68.0059 24.0625 67.4536 24.0625H3.99902ZM49.3646 30.6249H19.3646V33.9335H49.3646V30.6249Z\",\n    fill: \"#E2E2E2\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgProductNull);\nexport default __webpack_public_path__ + \"static/media/product_null.308a3d618910fdf127111106902b95d7.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport productNull from \"../assets/product_null.svg\";\r\n\r\nexport default function NoPostsUI() {\r\n  return (\r\n    <PostNull>\r\n      <img src={productNull} alt=\"글 없음 아이콘\" />\r\n      <p>현재 업로드된 글이 없습니다</p>\r\n    </PostNull>\r\n  );\r\n}\r\n\r\nconst PostNull = styled.div`\r\n  font-size: 16px;\r\n  color: var(--gray400-color);\r\n  text-align: center;\r\n\r\n  img {\r\n    width: 80px;\r\n    display: block;\r\n    margin: 210px auto 20px;\r\n  }\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ProfileUI from \"../ProfileUI\";\r\nimport { LocalNav, Modal } from \"../common\";\r\n\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { accountname } from \"../../recoil\";\r\n\r\nimport postMenu from \"../../assets/post_menu.svg\";\r\nimport { ProduceCard_I } from \"../../interface\";\r\n\r\nexport default function ProductCard({ profile, name, email, img, title, description, price, id }: ProduceCard_I) {\r\n  const handleClick = useRef<any>(null);\r\n  const myaccount_name = useRecoilValue(accountname);\r\n  const temp = useParams();\r\n  const account_name = temp.accountname ? temp.accountname : email || myaccount_name;\r\n\r\n  const [isHidden, setIsHidden] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleLocalNav = () => {\r\n    setIsHidden((prevState) => !prevState);\r\n  };\r\n\r\n  const handleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n      const localNavElement = document.getElementById(\"localNavElement\");\r\n\r\n      if (localNavElement && !localNavElement.contains(e.target as Node) && handleClick.current && !handleClick.current.contains(e.target as Node)) {\r\n        setIsHidden(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <CardWrap>\r\n      <CardTop>\r\n        <ProfileUI user_profile={profile} user_name={name} card={true} account_name={account_name} id={id} />\r\n        {temp.accountname === myaccount_name && (\r\n          <button onClick={handleLocalNav}>\r\n            <img src={postMenu} alt=\"메뉴 아이콘\" ref={handleClick} />\r\n          </button>\r\n        )}\r\n        <LocalNavWrap>\r\n          {isHidden ? (\r\n            <LocalNav\r\n              handleModal={handleModal}\r\n              width=\"120px\"\r\n              lists={[\r\n                { name: \"상품 수정\", nav: `/product/${id}` },\r\n                { name: \"상품 삭제\", nav: \"\" },\r\n              ]}\r\n            />\r\n          ) : (\r\n            false\r\n          )}\r\n        </LocalNavWrap>\r\n      </CardTop>\r\n      <Link to={`/productDetail/${id}`}>\r\n        <CardContent>\r\n          <img alt=\"상품 이미지\" src={img} />\r\n          <h3>{title}</h3>\r\n          <figcaption>{description}</figcaption>\r\n          <strong>{price.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")}</strong>\r\n          <span>원</span>\r\n        </CardContent>\r\n      </Link>\r\n      {showModal && (\r\n        <Modal\r\n          postId={id}\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n          handleModal={handleModal}\r\n          text=\"상품을 정말 삭제하시겠습니까?\"\r\n          buttonText1=\"상품을 삭제하겠습니다\"\r\n          buttonText2=\"아니요, 삭제하지 않습니다\"\r\n          showCloseButton={false}\r\n        />\r\n      )}\r\n    </CardWrap>\r\n  );\r\n}\r\n\r\nconst CardWrap = styled.section`\r\n  position: relative;\r\n\r\n  & > button {\r\n    position: absolute;\r\n    right: 16px;\r\n    bottom: 172px;\r\n  }\r\n`;\r\nconst CardTop = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  & > button {\r\n    height: 40px;\r\n    cursor: pointer;\r\n  }\r\n  img {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n  strong {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst LocalNavWrap = styled.div`\r\n  position: absolute;\r\n  top: 43px;\r\n  right: 0;\r\n  z-index: 10;\r\n`;\r\n\r\nconst CardContent = styled.figure`\r\n  transition: all 0.3s;\r\n\r\n  img {\r\n    width: 100%;\r\n    transition: all 0.3s;\r\n    aspect-ratio: 1/1;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.03);\r\n  }\r\n\r\n  h3 {\r\n    font-size: 20px;\r\n    font-family: var(--font--semibold);\r\n    padding: 16px 0;\r\n    border-bottom: 1px solid var(--gray200-color);\r\n  }\r\n\r\n  figcaption {\r\n    margin: 16px 0px;\r\n    height: 3em;\r\n    line-height: 1.5;\r\n    color: var(--gray500-color);\r\n    font-family: var(--font--Regular);\r\n    font-size: 16px;\r\n\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: -webkit-box;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n  }\r\n\r\n  strong {\r\n    font-size: 24px;\r\n    font-family: var(--font--Bold);\r\n    margin-right: 8px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n// 컴포넌트\r\nimport { ButtonLineIcon, ButtonFollow } from \"../common\";\r\n\r\n// 이미지 검사\r\nimport { checkImageUrl } from \"../../utils\";\r\n\r\nimport { accountname } from \"../../recoil\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { ProfileInfo_I } from \"../../interface\";\r\n\r\ninterface IntroUIProps {\r\n  profileData: ProfileInfo_I;\r\n  handleEditClick: () => void;\r\n}\r\n\r\nexport default function IntroUI({ profileData, handleEditClick }: IntroUIProps) {\r\n  const navigate = useNavigate();\r\n  const myAccount = useRecoilValue(accountname);\r\n\r\n  return (\r\n    <>\r\n      <IntroWrap>\r\n        <img src={checkImageUrl(profileData.image, \"profile\")} alt=\"유저 프로필 이미지\" />\r\n        <strong>{profileData.username}</strong>\r\n        <p>{profileData.accountname}</p>\r\n      </IntroWrap>\r\n\r\n      {myAccount === profileData.accountname ? (\r\n        <ButtonLineIcon text=\"프로필 수정하기\" onClick={handleEditClick} basic=\"true\" />\r\n      ) : (\r\n        <BtnWrap>\r\n          <ButtonLineIcon text=\"작가랑 채팅하기\" basic=\"true\" bg=\"black\" color=\"white\" br=\"none\" onClick={() => navigate(\"/chat\")} />\r\n          <ButtonFollow isFollow={profileData.isfollow} accountName={profileData.accountname} padding=\"true\" />\r\n        </BtnWrap>\r\n      )}\r\n\r\n      <p>{profileData.intro || \"아직 소개글이 없어요!\"}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nconst IntroWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  img {\r\n    width: 100px;\r\n    margin-bottom: 18px;\r\n    aspect-ratio: 1 / 1;\r\n    object-fit: cover;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  strong {\r\n    font-family: var(--font--semibold);\r\n    font-size: 24px;\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  p {\r\n    font-family: var(--font--Regular);\r\n    font-size: 18px;\r\n    color: var(--gray400-color);\r\n  }\r\n`;\r\n\r\nconst BtnWrap = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFollowers(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 182,\n    height: 28,\n    viewBox: \"0 0 182 28\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.548 8.208V12.528H19.06V18.936H8.548V27H0.0520001V1.8H20.536V8.208H8.548ZM32.3004 27.36C30.1164 27.36 28.1484 26.928 26.3964 26.064C24.6684 25.176 23.3124 23.964 22.3284 22.428C21.3444 20.868 20.8524 19.104 20.8524 17.136C20.8524 15.168 21.3444 13.416 22.3284 11.88C23.3124 10.32 24.6684 9.108 26.3964 8.244C28.1484 7.38 30.1164 6.948 32.3004 6.948C34.5084 6.948 36.4764 7.38 38.2044 8.244C39.9564 9.108 41.3124 10.32 42.2724 11.88C43.2564 13.416 43.7484 15.168 43.7484 17.136C43.7484 19.104 43.2564 20.868 42.2724 22.428C41.3124 23.964 39.9564 25.176 38.2044 26.064C36.4764 26.928 34.5084 27.36 32.3004 27.36ZM32.3004 21.024C33.2364 21.024 34.0044 20.688 34.6044 20.016C35.2044 19.32 35.5044 18.36 35.5044 17.136C35.5044 15.912 35.2044 14.964 34.6044 14.292C34.0044 13.62 33.2364 13.284 32.3004 13.284C31.3644 13.284 30.5964 13.62 29.9964 14.292C29.3964 14.964 29.0964 15.912 29.0964 17.136C29.0964 18.36 29.3964 19.32 29.9964 20.016C30.5964 20.688 31.3644 21.024 32.3004 21.024ZM45.5748 0.287998H53.7108V27H45.5748V0.287998ZM56.597 0.287998H64.733V27H56.597V0.287998ZM78.0232 27.36C75.8392 27.36 73.8712 26.928 72.1192 26.064C70.3912 25.176 69.0352 23.964 68.0512 22.428C67.0672 20.868 66.5752 19.104 66.5752 17.136C66.5752 15.168 67.0672 13.416 68.0512 11.88C69.0352 10.32 70.3912 9.108 72.1192 8.244C73.8712 7.38 75.8392 6.948 78.0232 6.948C80.2312 6.948 82.1992 7.38 83.9272 8.244C85.6792 9.108 87.0352 10.32 87.9952 11.88C88.9792 13.416 89.4712 15.168 89.4712 17.136C89.4712 19.104 88.9792 20.868 87.9952 22.428C87.0352 23.964 85.6792 25.176 83.9272 26.064C82.1992 26.928 80.2312 27.36 78.0232 27.36ZM78.0232 21.024C78.9592 21.024 79.7272 20.688 80.3272 20.016C80.9272 19.32 81.2272 18.36 81.2272 17.136C81.2272 15.912 80.9272 14.964 80.3272 14.292C79.7272 13.62 78.9592 13.284 78.0232 13.284C77.0872 13.284 76.3192 13.62 75.7192 14.292C75.1192 14.964 74.8192 15.912 74.8192 17.136C74.8192 18.36 75.1192 19.32 75.7192 20.016C76.3192 20.688 77.0872 21.024 78.0232 21.024ZM124.358 7.308L117.518 27H109.598L106.61 17.892L103.514 27H95.5943L88.7543 7.308H96.4583L99.8423 17.712L103.37 7.308H110.282L113.702 17.82L117.23 7.308H124.358ZM145.631 17.136C145.631 17.256 145.595 17.892 145.523 19.044H131.843C132.131 19.788 132.611 20.364 133.283 20.772C133.955 21.156 134.795 21.348 135.803 21.348C136.667 21.348 137.387 21.24 137.963 21.024C138.563 20.808 139.211 20.436 139.907 19.908L144.155 24.192C142.235 26.304 139.367 27.36 135.551 27.36C133.175 27.36 131.087 26.928 129.287 26.064C127.487 25.176 126.095 23.952 125.111 22.392C124.127 20.832 123.635 19.08 123.635 17.136C123.635 15.168 124.115 13.416 125.075 11.88C126.059 10.32 127.391 9.108 129.071 8.244C130.775 7.38 132.683 6.948 134.795 6.948C136.787 6.948 138.599 7.344 140.231 8.136C141.887 8.928 143.195 10.092 144.155 11.628C145.139 13.164 145.631 15 145.631 17.136ZM134.867 12.492C134.027 12.492 133.331 12.72 132.779 13.176C132.227 13.632 131.867 14.28 131.699 15.12H138.035C137.867 14.304 137.507 13.668 136.955 13.212C136.403 12.732 135.707 12.492 134.867 12.492ZM155.219 9.432C156.659 7.776 158.783 6.948 161.591 6.948V14.148C160.943 14.052 160.343 14.004 159.791 14.004C157.007 14.004 155.615 15.42 155.615 18.252V27H147.479V7.308H155.219V9.432ZM170.881 27.36C169.201 27.36 167.545 27.18 165.913 26.82C164.281 26.46 162.961 25.992 161.953 25.416L164.185 20.052C165.097 20.604 166.177 21.036 167.425 21.348C168.673 21.66 169.885 21.816 171.061 21.816C171.997 21.816 172.645 21.744 173.005 21.6C173.389 21.432 173.581 21.192 173.581 20.88C173.581 20.568 173.341 20.352 172.861 20.232C172.405 20.112 171.649 19.992 170.593 19.872C168.985 19.68 167.617 19.44 166.489 19.152C165.361 18.84 164.365 18.252 163.501 17.388C162.661 16.524 162.241 15.288 162.241 13.68C162.241 12.408 162.625 11.268 163.393 10.26C164.161 9.252 165.301 8.448 166.813 7.848C168.349 7.248 170.185 6.948 172.321 6.948C173.809 6.948 175.261 7.092 176.677 7.38C178.117 7.644 179.341 8.04 180.349 8.568L178.117 13.932C176.389 12.972 174.493 12.492 172.429 12.492C170.653 12.492 169.765 12.804 169.765 13.428C169.765 13.74 170.005 13.968 170.485 14.112C170.965 14.232 171.721 14.352 172.753 14.472C174.361 14.664 175.717 14.916 176.821 15.228C177.949 15.54 178.933 16.128 179.773 16.992C180.637 17.856 181.069 19.092 181.069 20.7C181.069 21.924 180.685 23.04 179.917 24.048C179.149 25.056 177.997 25.86 176.461 26.46C174.925 27.06 173.065 27.36 170.881 27.36Z\",\n    fill: \"black\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFollowers);\nexport default __webpack_public_path__ + \"static/media/Followers.6be26718578a306c95f516c53b921313.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFollowing(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 184,\n    height: 38,\n    viewBox: \"0 0 184 38\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.972 15.528H19.06V21.936H7.972V15.528ZM8.548 30H0.0520001V4.8H20.536V11.208H8.548V30ZM32.3004 30.36C30.0684 30.36 28.0884 29.928 26.3604 29.064C24.6564 28.176 23.3124 26.964 22.3284 25.428C21.3444 23.892 20.8524 22.128 20.8524 20.136C20.8524 18.144 21.3444 16.38 22.3284 14.844C23.3124 13.308 24.6564 12.108 26.3604 11.244C28.0884 10.38 30.0684 9.948 32.3004 9.948C34.5324 9.948 36.5124 10.38 38.2404 11.244C39.9684 12.108 41.3124 13.308 42.2724 14.844C43.2564 16.38 43.7484 18.144 43.7484 20.136C43.7484 22.128 43.2564 23.892 42.2724 25.428C41.3124 26.964 39.9684 28.176 38.2404 29.064C36.5124 29.928 34.5324 30.36 32.3004 30.36ZM32.3004 24.024C32.9004 24.024 33.4404 23.88 33.9204 23.592C34.4004 23.304 34.7844 22.872 35.0724 22.296C35.3604 21.696 35.5044 20.976 35.5044 20.136C35.5044 19.272 35.3604 18.564 35.0724 18.012C34.7844 17.436 34.4004 17.004 33.9204 16.716C33.4404 16.428 32.9004 16.284 32.3004 16.284C31.7004 16.284 31.1604 16.428 30.6804 16.716C30.2004 17.004 29.8164 17.436 29.5284 18.012C29.2404 18.564 29.0964 19.272 29.0964 20.136C29.0964 20.976 29.2404 21.696 29.5284 22.296C29.8164 22.872 30.2004 23.304 30.6804 23.592C31.1604 23.88 31.7004 24.024 32.3004 24.024ZM45.5748 30V3.288H53.7108V30H45.5748ZM56.597 30V3.288H64.733V30H56.597ZM78.0232 30.36C75.7912 30.36 73.8112 29.928 72.0832 29.064C70.3792 28.176 69.0352 26.964 68.0512 25.428C67.0672 23.892 66.5752 22.128 66.5752 20.136C66.5752 18.144 67.0672 16.38 68.0512 14.844C69.0352 13.308 70.3792 12.108 72.0832 11.244C73.8112 10.38 75.7912 9.948 78.0232 9.948C80.2552 9.948 82.2352 10.38 83.9632 11.244C85.6912 12.108 87.0352 13.308 87.9952 14.844C88.9792 16.38 89.4712 18.144 89.4712 20.136C89.4712 22.128 88.9792 23.892 87.9952 25.428C87.0352 26.964 85.6912 28.176 83.9632 29.064C82.2352 29.928 80.2552 30.36 78.0232 30.36ZM78.0232 24.024C78.6232 24.024 79.1632 23.88 79.6432 23.592C80.1232 23.304 80.5072 22.872 80.7952 22.296C81.0832 21.696 81.2272 20.976 81.2272 20.136C81.2272 19.272 81.0832 18.564 80.7952 18.012C80.5072 17.436 80.1232 17.004 79.6432 16.716C79.1632 16.428 78.6232 16.284 78.0232 16.284C77.4232 16.284 76.8832 16.428 76.4032 16.716C75.9232 17.004 75.5392 17.436 75.2512 18.012C74.9632 18.564 74.8192 19.272 74.8192 20.136C74.8192 20.976 74.9632 21.696 75.2512 22.296C75.5392 22.872 75.9232 23.304 76.4032 23.592C76.8832 23.88 77.4232 24.024 78.0232 24.024ZM95.5943 30L88.7543 10.308H96.4583L101.642 26.292H97.9343L103.37 10.308H110.282L115.466 26.292H111.866L117.23 10.308H124.358L117.518 30H109.598L105.458 17.328H107.834L103.514 30H95.5943ZM125.207 30V10.308H133.343V30H125.207ZM129.275 8.724C127.787 8.724 126.599 8.328 125.711 7.536C124.823 6.744 124.379 5.76 124.379 4.584C124.379 3.408 124.823 2.424 125.711 1.632C126.599 0.839998 127.787 0.443999 129.275 0.443999C130.763 0.443999 131.951 0.815999 132.839 1.56C133.727 2.304 134.171 3.264 134.171 4.44C134.171 5.688 133.727 6.72 132.839 7.536C131.951 8.328 130.763 8.724 129.275 8.724ZM149.909 9.948C151.421 9.948 152.789 10.26 154.013 10.884C155.237 11.484 156.197 12.432 156.893 13.728C157.613 15.024 157.973 16.704 157.973 18.768V30H149.837V20.172C149.837 18.948 149.621 18.084 149.189 17.58C148.757 17.052 148.169 16.788 147.425 16.788C146.873 16.788 146.357 16.92 145.877 17.184C145.421 17.424 145.049 17.832 144.761 18.408C144.497 18.984 144.365 19.764 144.365 20.748V30H136.229V10.308H143.969V16.068L142.421 14.412C143.189 12.924 144.221 11.808 145.517 11.064C146.837 10.32 148.301 9.948 149.909 9.948ZM171.146 37.344C169.202 37.344 167.378 37.14 165.674 36.732C163.97 36.324 162.506 35.712 161.282 34.896L164.018 29.352C164.786 29.952 165.758 30.42 166.934 30.756C168.134 31.116 169.262 31.296 170.318 31.296C171.998 31.296 173.198 30.936 173.918 30.216C174.638 29.52 174.998 28.512 174.998 27.192V25.536L175.358 19.416L175.394 13.296V10.308H183.134V26.076C183.134 29.892 182.078 32.724 179.966 34.572C177.854 36.42 174.914 37.344 171.146 37.344ZM169.562 28.92C167.906 28.92 166.358 28.536 164.918 27.768C163.478 26.976 162.314 25.872 161.426 24.456C160.538 23.04 160.094 21.36 160.094 19.416C160.094 17.472 160.538 15.792 161.426 14.376C162.314 12.96 163.478 11.868 164.918 11.1C166.358 10.332 167.906 9.948 169.562 9.948C171.266 9.948 172.658 10.284 173.738 10.956C174.842 11.628 175.658 12.672 176.186 14.088C176.714 15.48 176.978 17.256 176.978 19.416C176.978 21.576 176.714 23.364 176.186 24.78C175.658 26.172 174.842 27.216 173.738 27.912C172.658 28.584 171.266 28.92 169.562 28.92ZM171.722 22.584C172.37 22.584 172.946 22.452 173.45 22.188C173.954 21.924 174.35 21.552 174.638 21.072C174.926 20.592 175.07 20.04 175.07 19.416C175.07 18.768 174.926 18.216 174.638 17.76C174.35 17.28 173.954 16.92 173.45 16.68C172.946 16.416 172.37 16.284 171.722 16.284C171.098 16.284 170.522 16.416 169.994 16.68C169.49 16.92 169.082 17.28 168.77 17.76C168.482 18.216 168.338 18.768 168.338 19.416C168.338 20.04 168.482 20.592 168.77 21.072C169.082 21.552 169.49 21.924 169.994 22.188C170.522 22.452 171.098 22.584 171.722 22.584Z\",\n    fill: \"black\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFollowing);\nexport default __webpack_public_path__ + \"static/media/Following.ba9b68ebfe9588f3d8701e75f6c7e7c9.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// 컴포넌트\r\nimport ProfileUI from \"../ProfileUI\";\r\nimport { ButtonFollow } from \"../common\";\r\n\r\n// 이미지\r\nimport followers from \"../../assets/Followers.svg\";\r\nimport following from \"../../assets/Following.svg\";\r\nimport followSymbol from \"../../assets/follow_symbol.svg\";\r\n\r\n// 이미지 검사\r\nimport { checkImageUrl } from \"../../utils\";\r\nimport { useParams } from \"react-router\";\r\nimport { Follower_I, Following_I } from \"../../interface\";\r\n\r\ninterface FollowProps {\r\n  followerData: Follower_I[];\r\n  followingData: Following_I[];\r\n  activeFollow: number;\r\n}\r\n\r\nexport default function Follow({ followerData, followingData, activeFollow }: FollowProps) {\r\n  const account_name = useParams();\r\n\r\n  useEffect(() => {\r\n    const scrollContainer = document.querySelector(\".scroll-container\");\r\n    if (scrollContainer) {\r\n      scrollContainer.scrollTop = 0;\r\n    }\r\n  }, [activeFollow, account_name]);\r\n\r\n  return (\r\n    <FollowWrap>\r\n      {activeFollow === 1 ? (\r\n        <h3>\r\n          <img src={followers} alt=\"팔로워\" />\r\n        </h3>\r\n      ) : (\r\n        <h3>\r\n          <img src={following} alt=\"팔로잉\" />\r\n        </h3>\r\n      )}\r\n\r\n      {activeFollow === 1 && followerData && followerData?.length > 0 ? (\r\n        <ul className=\"scroll-container\">\r\n          {followerData.map((follow) => (\r\n            <FollowLi key={follow._id}>\r\n              <ProfileUI user_profile={checkImageUrl(follow.image, \"profile\")} user_name={follow.username} user_email={follow.accountname} account_name={follow.accountname} follow={true} />\r\n              <ButtonFollow isFollow={follow.isfollow} accountName={follow.accountname} />\r\n            </FollowLi>\r\n          ))}\r\n        </ul>\r\n      ) : activeFollow === 2 && followingData && followingData?.length > 0 ? (\r\n        <ul className=\"scroll-container\">\r\n          {followingData.map((follow) => (\r\n            <FollowLi key={follow._id}>\r\n              <ProfileUI user_profile={checkImageUrl(follow.image, \"profile\")} user_name={follow.username} user_email={follow.accountname} account_name={follow.accountname} follow={true} />\r\n              <ButtonFollow isFollow={follow.isfollow} accountName={follow.accountname} />\r\n            </FollowLi>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <FollowNull>\r\n          <img src={followSymbol} alt=\"구디 기본 이미지\" />\r\n          아직 유저가 존재하지 않습니다.\r\n        </FollowNull>\r\n      )}\r\n    </FollowWrap>\r\n  );\r\n}\r\n\r\nconst FollowWrap = styled.article`\r\n  width: 100%;\r\n\r\n  h3 {\r\n    height: 33px;\r\n    margin-bottom: 20px;\r\n\r\n    & > img {\r\n      width: 50%;\r\n    }\r\n  }\r\n\r\n  & > ul {\r\n    max-height: 20rem;\r\n    overflow-y: scroll;\r\n    padding-right: 5px;\r\n    scroll-behavior: smooth;\r\n\r\n    &::-webkit-scrollbar {\r\n      width: 5px;\r\n    }\r\n\r\n    &::-webkit-scrollbar-thumb {\r\n      background-color: #f5f5f5;\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FollowLi = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 25px;\r\n\r\n  & > a {\r\n    width: 60%;\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst FollowNull = styled.div`\r\n  font-size: 16px;\r\n  color: var(--gray400-color);\r\n  text-align: center;\r\n\r\n  img {\r\n    width: 80px;\r\n    display: block;\r\n    margin: 0 auto 10px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// api\r\nimport { followingAPI, followerAPI } from \"../../api\";\r\n\r\n// 컴포넌트\r\nimport Follow from \"./Follow\";\r\n\r\nimport { ProfileInfo_I, Follower_I, Following_I } from \"../../interface\";\r\n\r\nexport default function FollowListUI({ profileData }: { profileData: ProfileInfo_I }) {\r\n  const [activeFollow, setActiveFollow] = useState(1);\r\n  const [followingData, setFollowingData] = useState<Following_I[]>([]);\r\n  const [followerData, setFollowerData] = useState<Follower_I[]>([]);\r\n\r\n  const name = profileData.accountname;\r\n\r\n  const handleFollowClick = (followNumber: number) => {\r\n    setActiveFollow(followNumber);\r\n  };\r\n  const fetchFollowingData = async () => {\r\n    const response = await followingAPI(name);\r\n    setFollowingData([...response]);\r\n  };\r\n\r\n  const fetchFollowerData = async () => {\r\n    const response = await followerAPI(name);\r\n    setFollowerData([...response]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFollowingData();\r\n    fetchFollowerData();\r\n  }, [name]);\r\n\r\n  return (\r\n    <>\r\n      <FollowWrap>\r\n        <FollowDiv className={activeFollow === 1 ? \"followActive\" : \"\"} onClick={() => handleFollowClick(1)}>\r\n          <strong>{profileData.followerCount}</strong>\r\n          <p>팔로워</p>\r\n        </FollowDiv>\r\n        <FollowDiv className={activeFollow === 2 ? \"followActive\" : \"\"} onClick={() => handleFollowClick(2)}>\r\n          <strong>{profileData.followingCount}</strong>\r\n          <p>팔로잉</p>\r\n        </FollowDiv>\r\n      </FollowWrap>\r\n\r\n      <Follow followerData={followerData} followingData={followingData} activeFollow={activeFollow} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst FollowWrap = styled.div`\r\n  width: 100%;\r\n  border-top: 1px solid var(--gray300-color);\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  position: relative;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 50%;\r\n    width: 1px;\r\n    height: calc(100% - 5px);\r\n    display: inline-block;\r\n    background-color: var(--gray200-color);\r\n  }\r\n\r\n  .followActive {\r\n    background-color: #f4fff3;\r\n    border-radius: 4px;\r\n\r\n    strong {\r\n      color: var(--dark-sub-color);\r\n    }\r\n  }\r\n`;\r\n\r\nconst FollowDiv = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  margin-top: 5px;\r\n  padding: 15px;\r\n  cursor: pointer;\r\n\r\n  strong {\r\n    font-family: var(--font--semibold);\r\n    font-size: 20px;\r\n  }\r\n\r\n  p {\r\n    font-family: var(--font--Medium);\r\n    font-size: 14px;\r\n    color: var(--gray400-color);\r\n    margin-top: 8px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// api\r\nimport { updateProfile, uploadImageAPI } from \"../../api\";\r\n\r\n// 컴포넌트\r\nimport { Input, Button } from \"../common\";\r\n\r\n// 이미지\r\nimport PlusBtnImg from \"../../assets/add_button.svg\";\r\n// 이미지 검사\r\nimport { checkImageUrl } from \"../../utils\";\r\nimport { ProfileInfo_I } from \"../../interface\";\r\n\r\ninterface UpdateProfileProps {\r\n  profileData: ProfileInfo_I;\r\n  setProfileData: React.Dispatch<React.SetStateAction<ProfileInfo_I>>;\r\n  setIsEditing: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport default function UpdateProfile({ profileData, setIsEditing, setProfileData }: UpdateProfileProps) {\r\n  // 수정 관련 state\r\n  const [changeImageURL, setChangeImageURL] = useState(profileData.image);\r\n  const [userName, setUserName] = useState(profileData.username);\r\n  const [intro, setIntro] = useState(profileData.intro);\r\n\r\n  const handleImageChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.type === \"file\" && e.target.files && e.target.files.length > 0) {\r\n      const file = e.target.files[0];\r\n      const imgSrc = await uploadImageAPI(file);\r\n\r\n      setChangeImageURL(imgSrc);\r\n    }\r\n  };\r\n\r\n  const handleSaveClick = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    const updatedProfileData = {\r\n      ...profileData,\r\n      username: userName,\r\n      intro: intro,\r\n      image: changeImageURL,\r\n    };\r\n\r\n    setProfileData(updatedProfileData);\r\n    updateProfile({\r\n      username: userName,\r\n      intro: intro,\r\n      image: changeImageURL,\r\n    });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleCancelClick = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"username\") {\r\n      setUserName(value);\r\n    } else {\r\n      setIntro(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProfileDiv>\r\n        <input id=\"fileInput\" type=\"file\" style={{ display: \"none\" }} accept=\"image/jpeg, image/png, image/svg\" onChange={handleImageChange} />\r\n        <label htmlFor=\"fileInput\">\r\n          <ProfileImgWrap>\r\n            <img src={checkImageUrl(changeImageURL, \"profile\")} alt=\"Upload\" />\r\n          </ProfileImgWrap>\r\n          <img className=\"add_button_img\" src={PlusBtnImg} alt=\"Upload\" style={{ cursor: \"pointer\" }} />\r\n        </label>\r\n      </ProfileDiv>\r\n      <Form onSubmit={handleSaveClick}>\r\n        <div>\r\n          <Label>닉네임</Label>\r\n          <Input required name=\"username\" value={userName} onChange={handleInputChange} placeholder=\"변경할 닉네임을 입력해주세요\" />\r\n        </div>\r\n        <div>\r\n          <Label>소개 메세지</Label>\r\n          <textarea placeholder=\"소개 글을 입력해주세요\" name=\"intro\" value={intro} onChange={handleInputChange}></textarea>\r\n        </div>\r\n        <Button text=\"수정 취소\" type=\"button\" bg=\"white\" color=\"black\" width=\"100%\" padding=\"14px 0\" fontSize=\"16px\" onClick={handleCancelClick} />\r\n        <Button text=\"수정 완료\" type=\"submit\" bg=\"black\" width=\"100%\" padding=\"14px 0\" fontSize=\"16px\" br=\"none\" />\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ProfileImgWrap = styled.div`\r\n  overflow: hidden;\r\n  width: 100%;\r\n  aspect-ratio: 1 / 1;\r\n  & > img {\r\n    width: 110px;\r\n    aspect-ratio: 1/ 1;\r\n    object-fit: cover;\r\n    cursor: pointer;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nconst ProfileDiv = styled.div`\r\n  position: relative;\r\n  margin-bottom: 30px;\r\n  .add_button_img {\r\n    position: absolute;\r\n    top: 70px;\r\n    left: 70px;\r\n  }\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n\r\n  & > div:first-child {\r\n    margin-bottom: 32px;\r\n  }\r\n\r\n  textarea {\r\n    resize: none;\r\n    border: 1px solid var(--gray300-color);\r\n    width: 100%;\r\n    min-height: 130px;\r\n    border-radius: 4px;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    outline-color: black;\r\n    font-family: var(--font--Regular);\r\n    font-size: 1rem;\r\n    &::placeholder {\r\n      color: var(--gray300-color);\r\n      font-family: var(--font--Regular);\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n\r\n  button {\r\n    margin-top: 30px;\r\n\r\n    &:last-child {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 9px;\r\n  font-family: var(--font--Bold);\r\n  font-weight: 700;\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// 컴포넌트\r\nimport IntroUI from \"../../components/ProfileCommon/IntroUI\";\r\nimport FollowListUI from \"../../components/ProfileCommon/FollowListUI\";\r\nimport UpdateProfile from \"../../components/ProfileCommon/UpdateProfile\";\r\n\r\nimport { ProfileInfo_I } from \"../../interface\";\r\n\r\ninterface ProfileLeftUIProps {\r\n  profileData?: ProfileInfo_I;\r\n  setProfileData: React.Dispatch<React.SetStateAction<any>>;\r\n}\r\n\r\nexport default function ProfileLeftUI({ profileData, setProfileData }: ProfileLeftUIProps) {\r\n  // 프로필 정보 수정\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  // 프로필 수정 버튼 이벤트\r\n  const handleEditClick = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isEditing ? (\r\n        <ProfileLeft>\r\n          <h2 className=\"a11y-hidden\">사용자 프로필 수정</h2>\r\n          <UpdateProfile profileData={profileData as ProfileInfo_I} setIsEditing={setIsEditing} setProfileData={setProfileData} />\r\n        </ProfileLeft>\r\n      ) : (\r\n        <ProfileLeft>\r\n          <h2 className=\"a11y-hidden\">사용자 프로필</h2>\r\n          <IntroUI profileData={profileData as ProfileInfo_I} handleEditClick={handleEditClick} />\r\n          <FollowListUI profileData={profileData as ProfileInfo_I} />\r\n        </ProfileLeft>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst ProfileLeft = styled.section`\r\n  min-width: 370px;\r\n  height: fit-content;\r\n  padding: 60px 24px 45px;\r\n  background-color: #fff;\r\n  border: 1px solid var(--gray300-color);\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  margin-bottom: 120px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 35px;\r\n\r\n  & > button {\r\n    margin: 0 auto;\r\n  }\r\n\r\n  & > p {\r\n    text-align: center;\r\n    color: var(--gray500-color);\r\n    font-size: 16px;\r\n    font-family: var(--font--Regular);\r\n    line-height: 1.3;\r\n    text-align: justify;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// 리코일\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { checkDeletePost } from \"../../recoil\";\r\n\r\n// api\r\nimport { productListAPI } from \"../../api\";\r\n\r\n// 컴포넌트\r\nimport ProductCard from \"./ProductCard\";\r\nimport NoPostsUI from \"../NoPostsUI\";\r\n\r\nimport { BASE_URL, checkImageUrl } from \"../../utils\";\r\nimport { ProductList_I } from \"../../interface\";\r\n\r\ninterface ProductCarListProps {\r\n  accountname: string;\r\n  profile: boolean;\r\n}\r\n\r\nexport default function ProductCardList({ accountname, profile }: ProductCarListProps) {\r\n  const checkDelete = useRecoilValue(checkDeletePost);\r\n\r\n  const [productGetData, setproductGetData] = useState<ProductList_I[] | null>(null);\r\n\r\n  useEffect(() => {\r\n    const productGet = async () => {\r\n      try {\r\n        const response = await productListAPI(accountname as string);\r\n        setproductGetData(response.product);\r\n      } catch (error) {\r\n        console.error(\"Account API 에러가 발생했습니다\", error);\r\n      }\r\n    };\r\n    productGet();\r\n  }, [accountname, checkDelete]);\r\n\r\n  return (\r\n    <>\r\n      {productGetData === null || productGetData.length === 0 ? (\r\n        <NoPostsUI />\r\n      ) : (\r\n        <CardList profile={profile}>\r\n          {productGetData.map((productInfo) => {\r\n            return (\r\n              <ProductCard\r\n                key={productInfo.id}\r\n                id={productInfo.id}\r\n                profile={checkImageUrl(productInfo.author.image, \"profile\")}\r\n                name={productInfo.author.username}\r\n                email={productInfo.author.accountname}\r\n                img={checkImageUrl(BASE_URL + productInfo.itemImage.split(\",\")[0], \"post\")}\r\n                title={productInfo.itemName}\r\n                description={productInfo.link}\r\n                price={productInfo.price}\r\n              />\r\n            );\r\n          })}\r\n        </CardList>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst CardList = styled.div<{ profile?: boolean }>`\r\n  margin: ${({ profile }) => (profile ? \"30px 0 70px\" : \"80px 0\")};\r\n  display: grid;\r\n  grid-template-columns: ${({ profile }) => (profile ? \"repeat(3, 1fr)\" : \"repeat(2, 1fr)\")};\r\n  grid-template-rows: auto;\r\n  gap: ${({ profile }) => (profile ? \"60px 30px\" : \"60px\")};\r\n`;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { accountname } from \"../../recoil\";\r\n\r\nimport { checkImageUrl } from \"../../utils\";\r\n\r\nimport { LocalNav, Modal, ButtonPostLike } from \"../common\";\r\nimport ProfileUI from \"../ProfileUI\";\r\n\r\nimport postMenu from \"../../assets/post_menu.svg\";\r\n\r\nimport { PostCard_I } from \"../../interface\";\r\n\r\nconst getElapsedTime = (createdAt: string) => {\r\n  const currentTime = new Date();\r\n  const createdDateTime = new Date(createdAt);\r\n  const elapsedMilliseconds: number = currentTime.getTime() - createdDateTime.getTime();\r\n\r\n  const msInSecond = 1000;\r\n  const msInMinute = msInSecond * 60;\r\n  const msInHour = msInMinute * 60;\r\n  const msInDay = msInHour * 24;\r\n\r\n  const days = Math.floor(elapsedMilliseconds / msInDay);\r\n  const hours = Math.floor((elapsedMilliseconds % msInDay) / msInHour);\r\n  const minutes = Math.floor((elapsedMilliseconds % msInHour) / msInMinute);\r\n  const seconds = Math.floor((elapsedMilliseconds % msInMinute) / msInSecond);\r\n\r\n  let elapsedTimeString = \"\";\r\n  if (days > 0) {\r\n    elapsedTimeString += `${days}일 전`;\r\n  } else if (hours > 0) {\r\n    elapsedTimeString += `${hours}시간 전`;\r\n  } else if (minutes > 0) {\r\n    elapsedTimeString += `${minutes}분 전`;\r\n  } else {\r\n    elapsedTimeString += `${seconds}초 전`;\r\n  }\r\n\r\n  return elapsedTimeString;\r\n};\r\n\r\nexport default function PostCard({ username, profileImage, email, content, image, createdAt, postId, hearted, heartCount }: PostCard_I) {\r\n  const handleClick = useRef<any>(null);\r\n  const elapsedTimeString = getElapsedTime(createdAt);\r\n  const [heartValue, setHeartValue] = useState(heartCount);\r\n  const [isHidden, setIsHidden] = useState(false);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const handleLocalNav = () => {\r\n    setIsHidden((prevIsHidden) => !prevIsHidden);\r\n  };\r\n\r\n  const handleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (e: MouseEvent) => {\r\n      const localNavElement = document.getElementById(\"localNavElement\");\r\n\r\n      if (localNavElement && !localNavElement.contains(e.target as Node) && handleClick.current && !handleClick.current.contains(e.target as Node)) {\r\n        setIsHidden(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const myaccount_name = useRecoilValue(accountname);\r\n  const temp = useParams();\r\n  const account_name = temp.accountname ? temp.accountname : myaccount_name;\r\n\r\n  return (\r\n    <article>\r\n      <PostTop>\r\n        <ProfileUI user_profile={checkImageUrl(profileImage, \"profile\")} user_name={username} user_email={email} mainprofile={false} card={true} account_name={account_name} />\r\n        {temp.accountname === myaccount_name && (\r\n          <button onClick={handleLocalNav}>\r\n            <img src={postMenu} alt=\"게시글 삭제 및 신고 메뉴\" ref={handleClick} />\r\n          </button>\r\n        )}\r\n        <LocalNavWrap>\r\n          {isHidden ? (\r\n            <LocalNav\r\n              handleModal={handleModal}\r\n              width=\"120px\"\r\n              lists={[\r\n                { name: \"게시글 수정\", nav: `/post/${postId}` },\r\n                { name: \"게시글 삭제\", nav: \"\" },\r\n              ]}\r\n            />\r\n          ) : (\r\n            false\r\n          )}\r\n        </LocalNavWrap>\r\n      </PostTop>\r\n      <PostContent>\r\n        <figcaption>{content}</figcaption>\r\n        <img src={image ? image : \"https://api.mandarin.weniv.co.kr/1687455865316.jpg\"} alt=\"게시글 이미지\" />\r\n        <div>\r\n          <span>{elapsedTimeString}</span>\r\n          <div className=\"like_wrap\">\r\n            <span>{heartValue}</span>\r\n            <ButtonPostLike postId={postId} liked={hearted} setHeartValue={setHeartValue} />\r\n          </div>\r\n        </div>\r\n      </PostContent>\r\n      {showModal && (\r\n        <Modal\r\n          postId={postId}\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n          handleModal={handleModal}\r\n          text=\"게시물을 정말 삭제하시겠습니까?\"\r\n          buttonText1=\"삭제하겠습니다\"\r\n          buttonText2=\"아니요, 삭제하지 않습니다\"\r\n          showCloseButton={false}\r\n        />\r\n      )}\r\n    </article>\r\n  );\r\n}\r\n\r\nconst PostTop = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  & > button {\r\n    height: 40px;\r\n    cursor: pointer;\r\n  }\r\n  img {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n  strong {\r\n    font-size: 16px;\r\n  }\r\n`;\r\nconst PostContent = styled.figure`\r\n  width: 100%;\r\n  & > div {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n\r\n  .like_wrap {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  img {\r\n    width: 100%;\r\n    aspect-ratio: 1/1;\r\n    object-fit: cover;\r\n  }\r\n\r\n  span {\r\n    font-family: var(--font-Regular);\r\n    color: var(--gray400-color);\r\n    margin-right: 5px;\r\n    font-size: 1rem;\r\n  }\r\n\r\n  figcaption {\r\n    min-height: 85px;\r\n    width: 100%;\r\n    color: var(--gray500-color);\r\n    line-height: 1.4rem;\r\n    word-wrap: break-word;\r\n  }\r\n`;\r\n\r\nconst LocalNavWrap = styled.div`\r\n  position: absolute;\r\n  top: 43px;\r\n  right: 0;\r\n  z-index: 10;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// 리코일\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { checkDeletePost } from \"../../recoil\";\r\n\r\n// api\r\nimport { postListAPI } from \"../../api\";\r\n\r\n// 컴포넌트\r\nimport PostCard from \"./PostCard\";\r\nimport NoPostsUI from \"../NoPostsUI\";\r\n\r\n// 이미지 검사\r\nimport { checkImageUrl } from \"../../utils\";\r\n\r\nimport { Accountname_I, PostList_I } from \"../../interface\";\r\n\r\nexport default function PostCardList({ accountname }: Accountname_I) {\r\n  const [userPostList, setUserPostList] = useState<PostList_I[] | null>(null);\r\n  const checkDelete = useRecoilValue(checkDeletePost);\r\n\r\n  useEffect(() => {\r\n    const fetchPostData = async () => {\r\n      try {\r\n        const response = await postListAPI(accountname as string);\r\n\r\n        if (response.post) {\r\n          setUserPostList(response.post);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    fetchPostData();\r\n  }, [accountname, checkDelete]);\r\n\r\n  return (\r\n    <>\r\n      {userPostList === null || userPostList.length === 0 ? (\r\n        <NoPostsUI />\r\n      ) : (\r\n        <PostListWrap>\r\n          {userPostList.map((post) => (\r\n            <PostCard\r\n              key={post.id}\r\n              postId={post.id}\r\n              username={post.author.username}\r\n              profileImage={post.author.image}\r\n              email={post.author.accountname}\r\n              content={post.content}\r\n              image={checkImageUrl(post.image.split(\",\")[0], \"post\")}\r\n              createdAt={post.createdAt}\r\n              hearted={post.hearted}\r\n              heartCount={post.heartCount}\r\n            />\r\n          ))}\r\n        </PostListWrap>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst PostListWrap = styled.section`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: auto;\r\n  gap: 60px 20px;\r\n  margin-bottom: 70px;\r\n`;\r\n","var _path, _path2, _path3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPointEdgeProfile(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 103,\n    height: 48,\n    viewBox: \"0 0 103 48\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21.8613 47.75L0.000226706 29L16.8613 29L21.8613 47.75Z\",\n    fill: \"#49ED3F\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.2774 0H103V29H0L11.2774 0Z\",\n    fill: \"#49ED3F\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M34.42 22.2C33.3267 22.2 32.32 22.0267 31.4 21.68C30.4933 21.32 29.7 20.82 29.02 20.18C28.34 19.5267 27.8133 18.76 27.44 17.88C27.0667 17 26.88 16.04 26.88 15C26.88 13.96 27.0667 13 27.44 12.12C27.8133 11.24 28.34 10.48 29.02 9.84C29.7133 9.18667 30.52 8.68667 31.44 8.34C32.36 7.98 33.3667 7.8 34.46 7.8C35.6467 7.8 36.7133 7.99333 37.66 8.38C38.62 8.76667 39.4267 9.33333 40.08 10.08L38.44 11.68C37.8933 11.1333 37.3 10.7333 36.66 10.48C36.0333 10.2133 35.34 10.08 34.58 10.08C33.8467 10.08 33.1667 10.2 32.54 10.44C31.9133 10.68 31.3733 11.02 30.92 11.46C30.4667 11.9 30.1133 12.42 29.86 13.02C29.62 13.62 29.5 14.28 29.5 15C29.5 15.7067 29.62 16.36 29.86 16.96C30.1133 17.56 30.4667 18.0867 30.92 18.54C31.3733 18.98 31.9067 19.32 32.52 19.56C33.1333 19.8 33.8133 19.92 34.56 19.92C35.2533 19.92 35.92 19.8133 36.56 19.6C37.2133 19.3733 37.8333 19 38.42 18.48L39.9 20.42C39.1667 21.0067 38.3133 21.4533 37.34 21.76C36.38 22.0533 35.4067 22.2 34.42 22.2ZM37.44 20.08V14.84H39.9V20.42L37.44 20.08ZM47.4892 22.14C46.3959 22.14 45.4226 21.9067 44.5692 21.44C43.7159 20.96 43.0426 20.3067 42.5492 19.48C42.0559 18.6533 41.8092 17.7133 41.8092 16.66C41.8092 15.5933 42.0559 14.6533 42.5492 13.84C43.0426 13.0133 43.7159 12.3667 44.5692 11.9C45.4226 11.4333 46.3959 11.2 47.4892 11.2C48.5959 11.2 49.5759 11.4333 50.4292 11.9C51.2959 12.3667 51.9692 13.0067 52.4492 13.82C52.9426 14.6333 53.1892 15.58 53.1892 16.66C53.1892 17.7133 52.9426 18.6533 52.4492 19.48C51.9692 20.3067 51.2959 20.96 50.4292 21.44C49.5759 21.9067 48.5959 22.14 47.4892 22.14ZM47.4892 20C48.1026 20 48.6492 19.8667 49.1292 19.6C49.6092 19.3333 49.9826 18.9467 50.2492 18.44C50.5292 17.9333 50.6692 17.34 50.6692 16.66C50.6692 15.9667 50.5292 15.3733 50.2492 14.88C49.9826 14.3733 49.6092 13.9867 49.1292 13.72C48.6492 13.4533 48.1092 13.32 47.5092 13.32C46.8959 13.32 46.3492 13.4533 45.8692 13.72C45.4026 13.9867 45.0292 14.3733 44.7492 14.88C44.4692 15.3733 44.3292 15.9667 44.3292 16.66C44.3292 17.34 44.4692 17.9333 44.7492 18.44C45.0292 18.9467 45.4026 19.3333 45.8692 19.6C46.3492 19.8667 46.8892 20 47.4892 20ZM59.9798 22.14C58.8865 22.14 57.9132 21.9067 57.0598 21.44C56.2065 20.96 55.5332 20.3067 55.0398 19.48C54.5465 18.6533 54.2998 17.7133 54.2998 16.66C54.2998 15.5933 54.5465 14.6533 55.0398 13.84C55.5332 13.0133 56.2065 12.3667 57.0598 11.9C57.9132 11.4333 58.8865 11.2 59.9798 11.2C61.0865 11.2 62.0665 11.4333 62.9198 11.9C63.7865 12.3667 64.4598 13.0067 64.9398 13.82C65.4332 14.6333 65.6798 15.58 65.6798 16.66C65.6798 17.7133 65.4332 18.6533 64.9398 19.48C64.4598 20.3067 63.7865 20.96 62.9198 21.44C62.0665 21.9067 61.0865 22.14 59.9798 22.14ZM59.9798 20C60.5932 20 61.1398 19.8667 61.6198 19.6C62.0998 19.3333 62.4732 18.9467 62.7398 18.44C63.0198 17.9333 63.1598 17.34 63.1598 16.66C63.1598 15.9667 63.0198 15.3733 62.7398 14.88C62.4732 14.3733 62.0998 13.9867 61.6198 13.72C61.1398 13.4533 60.5998 13.32 59.9998 13.32C59.3865 13.32 58.8398 13.4533 58.3598 13.72C57.8932 13.9867 57.5198 14.3733 57.2398 14.88C56.9598 15.3733 56.8198 15.9667 56.8198 16.66C56.8198 17.34 56.9598 17.9333 57.2398 18.44C57.5198 18.9467 57.8932 19.3333 58.3598 19.6C58.8398 19.8667 59.3798 20 59.9798 20ZM72.1905 22.14C71.1638 22.14 70.2371 21.9133 69.4105 21.46C68.5971 20.9933 67.9571 20.3533 67.4905 19.54C67.0238 18.7267 66.7905 17.7667 66.7905 16.66C66.7905 15.5533 67.0238 14.5933 67.4905 13.78C67.9571 12.9667 68.5971 12.3333 69.4105 11.88C70.2371 11.4267 71.1638 11.2 72.1905 11.2C73.0838 11.2 73.8838 11.4 74.5905 11.8C75.2971 12.1867 75.8571 12.78 76.2705 13.58C76.6838 14.38 76.8905 15.4067 76.8905 16.66C76.8905 17.9 76.6905 18.9267 76.2905 19.74C75.8905 20.54 75.3371 21.14 74.6305 21.54C73.9238 21.94 73.1105 22.14 72.1905 22.14ZM72.4905 20C73.0905 20 73.6238 19.8667 74.0905 19.6C74.5705 19.3333 74.9505 18.9467 75.2305 18.44C75.5238 17.9333 75.6705 17.34 75.6705 16.66C75.6705 15.9667 75.5238 15.3733 75.2305 14.88C74.9505 14.3733 74.5705 13.9867 74.0905 13.72C73.6238 13.4533 73.0905 13.32 72.4905 13.32C71.8905 13.32 71.3505 13.4533 70.8705 13.72C70.4038 13.9867 70.0238 14.3733 69.7305 14.88C69.4505 15.3733 69.3105 15.9667 69.3105 16.66C69.3105 17.34 69.4505 17.9333 69.7305 18.44C70.0238 18.9467 70.4038 19.3333 70.8705 19.6C71.3505 19.8667 71.8905 20 72.4905 20ZM75.7305 22V19.48L75.8305 16.64L75.6305 13.8V7.16H78.1105V22H75.7305ZM81.0009 22V11.32H83.5009V22H81.0009ZM82.2609 9.56C81.7943 9.56 81.4076 9.41333 81.1009 9.12C80.8076 8.82667 80.6609 8.47333 80.6609 8.06C80.6609 7.63333 80.8076 7.28 81.1009 7C81.4076 6.70667 81.7943 6.56 82.2609 6.56C82.7276 6.56 83.1076 6.7 83.4009 6.98C83.7076 7.24667 83.8609 7.58667 83.8609 8C83.8609 8.44 83.7143 8.81333 83.4209 9.12C83.1276 9.41333 82.7409 9.56 82.2609 9.56Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPointEdgeProfile);\nexport default __webpack_public_path__ + \"static/media/point-edge-profile.0206f1299e898cc4b76db80b578a6a2a.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgAuthorProducts(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 420,\n    height: 37,\n    viewBox: \"0 0 420 37\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.0879999 36L14.776 2.4H25.912L40.6 36H28.888L18.04 7.776H22.456L11.608 36H0.0879999ZM8.824 30.144L11.704 21.984H27.16L30.04 30.144H8.824ZM51.5871 36.48C49.5071 36.48 47.6191 36.064 45.9231 35.232C44.2591 34.368 42.9471 33.04 41.9871 31.248C41.0271 29.424 40.5471 27.088 40.5471 24.24V9.744H51.3951V22.368C51.3951 24.224 51.6991 25.52 52.3071 26.256C52.9151 26.992 53.7471 27.36 54.8031 27.36C55.4431 27.36 56.0351 27.2 56.5791 26.88C57.1551 26.528 57.6191 25.968 57.9711 25.2C58.3231 24.4 58.4991 23.36 58.4991 22.08V9.744H69.3471V36H59.0271V28.416L61.0911 30.48C60.1631 32.528 58.8351 34.048 57.1071 35.04C55.4111 36 53.5711 36.48 51.5871 36.48ZM85.8708 36.48C82.2548 36.48 79.4388 35.616 77.4228 33.888C75.4068 32.128 74.3988 29.44 74.3988 25.824V3.84H85.2468V25.728C85.2468 26.528 85.4548 27.152 85.8708 27.6C86.3188 28.048 86.8628 28.272 87.5028 28.272C88.4308 28.272 89.2468 28.032 89.9508 27.552L92.5428 35.088C91.7108 35.568 90.7028 35.92 89.5188 36.144C88.3668 36.368 87.1508 36.48 85.8708 36.48ZM70.7988 19.104V11.184H90.6228V19.104H70.7988ZM112.557 9.264C114.573 9.264 116.397 9.68 118.029 10.512C119.661 11.312 120.941 12.576 121.869 14.304C122.829 16.032 123.309 18.272 123.309 21.024V36H112.461V22.896C112.461 21.264 112.173 20.112 111.597 19.44C111.021 18.736 110.237 18.384 109.245 18.384C108.509 18.384 107.821 18.56 107.181 18.912C106.573 19.232 106.077 19.776 105.693 20.544C105.341 21.312 105.165 22.352 105.165 23.664V36H94.3169V0.383998H105.165V17.424L102.573 15.216C103.597 13.232 104.973 11.744 106.701 10.752C108.461 9.76 110.413 9.264 112.557 9.264ZM141.401 36.48C138.425 36.48 135.785 35.904 133.481 34.752C131.209 33.568 129.417 31.952 128.105 29.904C126.793 27.856 126.137 25.504 126.137 22.848C126.137 20.192 126.793 17.84 128.105 15.792C129.417 13.744 131.209 12.144 133.481 10.992C135.785 9.84 138.425 9.264 141.401 9.264C144.377 9.264 147.017 9.84 149.321 10.992C151.625 12.144 153.417 13.744 154.697 15.792C156.009 17.84 156.665 20.192 156.665 22.848C156.665 25.504 156.009 27.856 154.697 29.904C153.417 31.952 151.625 33.568 149.321 34.752C147.017 35.904 144.377 36.48 141.401 36.48ZM141.401 28.032C142.201 28.032 142.921 27.84 143.561 27.456C144.201 27.072 144.713 26.496 145.097 25.728C145.481 24.928 145.673 23.968 145.673 22.848C145.673 21.696 145.481 20.752 145.097 20.016C144.713 19.248 144.201 18.672 143.561 18.288C142.921 17.904 142.201 17.712 141.401 17.712C140.601 17.712 139.881 17.904 139.241 18.288C138.601 18.672 138.089 19.248 137.705 20.016C137.321 20.752 137.129 21.696 137.129 22.848C137.129 23.968 137.321 24.928 137.705 25.728C138.089 26.496 138.601 27.072 139.241 27.456C139.881 27.84 140.601 28.032 141.401 28.032ZM159.1 36V9.744H169.42V17.664L167.74 15.408C168.54 13.36 169.82 11.824 171.58 10.8C173.34 9.776 175.452 9.264 177.916 9.264V18.864C177.436 18.8 177.004 18.752 176.62 18.72C176.268 18.688 175.9 18.672 175.516 18.672C173.884 18.672 172.54 19.104 171.484 19.968C170.46 20.8 169.948 22.256 169.948 24.336V36H159.1ZM193.797 36V2.4H209.973C213.109 2.4 215.813 2.912 218.085 3.936C220.389 4.96 222.165 6.432 223.413 8.352C224.661 10.24 225.285 12.48 225.285 15.072C225.285 17.664 224.661 19.904 223.413 21.792C222.165 23.68 220.389 25.152 218.085 26.208C215.813 27.232 213.109 27.744 209.973 27.744H200.085L205.125 22.896V36H193.797ZM205.125 24.144L200.085 19.008H209.253C210.821 19.008 211.973 18.656 212.709 17.952C213.477 17.248 213.861 16.288 213.861 15.072C213.861 13.856 213.477 12.896 212.709 12.192C211.973 11.488 210.821 11.136 209.253 11.136H200.085L205.125 6V24.144ZM228.173 36V9.744H238.493V17.664L236.813 15.408C237.613 13.36 238.893 11.824 240.653 10.8C242.413 9.776 244.525 9.264 246.989 9.264V18.864C246.509 18.8 246.077 18.752 245.693 18.72C245.341 18.688 244.973 18.672 244.589 18.672C242.957 18.672 241.613 19.104 240.557 19.968C239.533 20.8 239.021 22.256 239.021 24.336V36H228.173ZM262.741 36.48C259.765 36.48 257.125 35.904 254.821 34.752C252.549 33.568 250.757 31.952 249.445 29.904C248.133 27.856 247.477 25.504 247.477 22.848C247.477 20.192 248.133 17.84 249.445 15.792C250.757 13.744 252.549 12.144 254.821 10.992C257.125 9.84 259.765 9.264 262.741 9.264C265.717 9.264 268.357 9.84 270.661 10.992C272.965 12.144 274.757 13.744 276.037 15.792C277.349 17.84 278.005 20.192 278.005 22.848C278.005 25.504 277.349 27.856 276.037 29.904C274.757 31.952 272.965 33.568 270.661 34.752C268.357 35.904 265.717 36.48 262.741 36.48ZM262.741 28.032C263.541 28.032 264.261 27.84 264.901 27.456C265.541 27.072 266.053 26.496 266.437 25.728C266.821 24.928 267.013 23.968 267.013 22.848C267.013 21.696 266.821 20.752 266.437 20.016C266.053 19.248 265.541 18.672 264.901 18.288C264.261 17.904 263.541 17.712 262.741 17.712C261.941 17.712 261.221 17.904 260.581 18.288C259.941 18.672 259.429 19.248 259.045 20.016C258.661 20.752 258.469 21.696 258.469 22.848C258.469 23.968 258.661 24.928 259.045 25.728C259.429 26.496 259.941 27.072 260.581 27.456C261.221 27.84 261.941 28.032 262.741 28.032ZM291.961 36.48C289.689 36.48 287.577 35.936 285.625 34.848C283.705 33.728 282.169 32.16 281.017 30.144C279.865 28.096 279.289 25.664 279.289 22.848C279.289 20.032 279.865 17.616 281.017 15.6C282.169 13.552 283.705 11.984 285.625 10.896C287.577 9.808 289.689 9.264 291.961 9.264C294.265 9.264 296.153 9.76 297.625 10.752C299.097 11.712 300.185 13.2 300.889 15.216C301.593 17.2 301.945 19.744 301.945 22.848C301.945 25.984 301.609 28.56 300.937 30.576C300.297 32.592 299.241 34.08 297.769 35.04C296.329 36 294.393 36.48 291.961 36.48ZM294.553 28.032C295.353 28.032 296.073 27.84 296.713 27.456C297.353 27.072 297.865 26.496 298.249 25.728C298.633 24.928 298.825 23.968 298.825 22.848C298.825 21.696 298.633 20.752 298.249 20.016C297.865 19.248 297.353 18.672 296.713 18.288C296.073 17.904 295.353 17.712 294.553 17.712C293.753 17.712 293.033 17.904 292.393 18.288C291.753 18.672 291.241 19.248 290.857 20.016C290.473 20.752 290.281 21.696 290.281 22.848C290.281 23.968 290.473 24.928 290.857 25.728C291.241 26.496 291.753 27.072 292.393 27.456C293.033 27.84 293.753 28.032 294.553 28.032ZM299.161 36V32.448L299.113 22.848L298.633 13.248V0.383998H309.481V36H299.161ZM324.268 36.48C322.188 36.48 320.3 36.064 318.604 35.232C316.94 34.368 315.628 33.04 314.668 31.248C313.708 29.424 313.228 27.088 313.228 24.24V9.744H324.076V22.368C324.076 24.224 324.38 25.52 324.988 26.256C325.596 26.992 326.428 27.36 327.484 27.36C328.124 27.36 328.716 27.2 329.26 26.88C329.836 26.528 330.3 25.968 330.652 25.2C331.004 24.4 331.18 23.36 331.18 22.08V9.744H342.028V36H331.708V28.416L333.772 30.48C332.844 32.528 331.516 34.048 329.788 35.04C328.092 36 326.252 36.48 324.268 36.48ZM359.992 36.48C356.984 36.48 354.312 35.904 351.976 34.752C349.64 33.6 347.8 32 346.456 29.952C345.144 27.872 344.488 25.504 344.488 22.848C344.488 20.192 345.144 17.84 346.456 15.792C347.8 13.744 349.64 12.144 351.976 10.992C354.312 9.84 356.984 9.264 359.992 9.264C363.192 9.264 365.928 9.952 368.2 11.328C370.472 12.704 372.04 14.608 372.904 17.04L364.504 21.168C363.96 19.952 363.288 19.072 362.488 18.528C361.72 17.984 360.872 17.712 359.944 17.712C359.144 17.712 358.392 17.904 357.688 18.288C357.016 18.672 356.472 19.248 356.056 20.016C355.672 20.752 355.48 21.696 355.48 22.848C355.48 24 355.672 24.96 356.056 25.728C356.472 26.496 357.016 27.072 357.688 27.456C358.392 27.84 359.144 28.032 359.944 28.032C360.872 28.032 361.72 27.76 362.488 27.216C363.288 26.672 363.96 25.792 364.504 24.576L372.904 28.704C372.04 31.136 370.472 33.04 368.2 34.416C365.928 35.792 363.192 36.48 359.992 36.48ZM387.592 36.48C383.976 36.48 381.16 35.616 379.144 33.888C377.128 32.128 376.12 29.44 376.12 25.824V3.84H386.968V25.728C386.968 26.528 387.176 27.152 387.592 27.6C388.04 28.048 388.584 28.272 389.224 28.272C390.152 28.272 390.968 28.032 391.672 27.552L394.264 35.088C393.432 35.568 392.424 35.92 391.24 36.144C390.088 36.368 388.872 36.48 387.592 36.48ZM372.52 19.104V11.184H392.344V19.104H372.52ZM406.31 36.48C404.07 36.48 401.862 36.24 399.686 35.76C397.51 35.28 395.75 34.656 394.406 33.888L397.382 26.736C398.63 27.472 400.07 28.048 401.702 28.464C403.366 28.88 404.982 29.088 406.55 29.088C407.862 29.088 408.742 28.976 409.19 28.752C409.67 28.528 409.91 28.224 409.91 27.84C409.91 27.456 409.638 27.184 409.094 27.024C408.55 26.832 407.83 26.688 406.934 26.592C406.038 26.496 405.046 26.384 403.958 26.256C402.902 26.096 401.83 25.872 400.742 25.584C399.654 25.296 398.662 24.864 397.766 24.288C396.87 23.712 396.15 22.944 395.606 21.984C395.062 20.992 394.79 19.744 394.79 18.24C394.79 16.576 395.286 15.072 396.278 13.728C397.302 12.384 398.806 11.312 400.79 10.512C402.806 9.68 405.286 9.264 408.23 9.264C410.15 9.264 412.07 9.44 413.99 9.792C415.91 10.144 417.558 10.688 418.934 11.424L415.958 18.576C414.614 17.84 413.286 17.344 411.974 17.088C410.694 16.8 409.494 16.656 408.374 16.656C406.998 16.656 406.054 16.784 405.542 17.04C405.062 17.296 404.822 17.584 404.822 17.904C404.822 18.288 405.094 18.576 405.638 18.768C406.182 18.96 406.902 19.104 407.798 19.2C408.694 19.296 409.67 19.424 410.726 19.584C411.814 19.712 412.886 19.936 413.942 20.256C415.03 20.544 416.022 20.976 416.918 21.552C417.814 22.128 418.534 22.912 419.078 23.904C419.622 24.864 419.894 26.096 419.894 27.6C419.894 29.168 419.398 30.64 418.406 32.016C417.414 33.36 415.91 34.448 413.894 35.28C411.878 36.08 409.35 36.48 406.31 36.48Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAuthorProducts);\nexport default __webpack_public_path__ + \"static/media/Author-Products.1b71be34c7e53718970d872d2f7538b2.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgAuthorPosts(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 331,\n    height: 37,\n    viewBox: \"0 0 331 37\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.0879999 36L14.776 2.4H25.912L40.6 36H28.888L18.04 7.776H22.456L11.608 36H0.0879999ZM8.824 30.144L11.704 21.984H27.16L30.04 30.144H8.824ZM51.5871 36.48C49.5071 36.48 47.6191 36.064 45.9231 35.232C44.2591 34.368 42.9471 33.04 41.9871 31.248C41.0271 29.424 40.5471 27.088 40.5471 24.24V9.744H51.3951V22.368C51.3951 24.224 51.6991 25.52 52.3071 26.256C52.9151 26.992 53.7471 27.36 54.8031 27.36C55.4431 27.36 56.0351 27.2 56.5791 26.88C57.1551 26.528 57.6191 25.968 57.9711 25.2C58.3231 24.4 58.4991 23.36 58.4991 22.08V9.744H69.3471V36H59.0271V28.416L61.0911 30.48C60.1631 32.528 58.8351 34.048 57.1071 35.04C55.4111 36 53.5711 36.48 51.5871 36.48ZM85.8708 36.48C82.2548 36.48 79.4388 35.616 77.4228 33.888C75.4068 32.128 74.3988 29.44 74.3988 25.824V3.84H85.2468V25.728C85.2468 26.528 85.4548 27.152 85.8708 27.6C86.3188 28.048 86.8628 28.272 87.5028 28.272C88.4308 28.272 89.2468 28.032 89.9508 27.552L92.5428 35.088C91.7108 35.568 90.7028 35.92 89.5188 36.144C88.3668 36.368 87.1508 36.48 85.8708 36.48ZM70.7988 19.104V11.184H90.6228V19.104H70.7988ZM112.557 9.264C114.573 9.264 116.397 9.68 118.029 10.512C119.661 11.312 120.941 12.576 121.869 14.304C122.829 16.032 123.309 18.272 123.309 21.024V36H112.461V22.896C112.461 21.264 112.173 20.112 111.597 19.44C111.021 18.736 110.237 18.384 109.245 18.384C108.509 18.384 107.821 18.56 107.181 18.912C106.573 19.232 106.077 19.776 105.693 20.544C105.341 21.312 105.165 22.352 105.165 23.664V36H94.3169V0.383998H105.165V17.424L102.573 15.216C103.597 13.232 104.973 11.744 106.701 10.752C108.461 9.76 110.413 9.264 112.557 9.264ZM141.401 36.48C138.425 36.48 135.785 35.904 133.481 34.752C131.209 33.568 129.417 31.952 128.105 29.904C126.793 27.856 126.137 25.504 126.137 22.848C126.137 20.192 126.793 17.84 128.105 15.792C129.417 13.744 131.209 12.144 133.481 10.992C135.785 9.84 138.425 9.264 141.401 9.264C144.377 9.264 147.017 9.84 149.321 10.992C151.625 12.144 153.417 13.744 154.697 15.792C156.009 17.84 156.665 20.192 156.665 22.848C156.665 25.504 156.009 27.856 154.697 29.904C153.417 31.952 151.625 33.568 149.321 34.752C147.017 35.904 144.377 36.48 141.401 36.48ZM141.401 28.032C142.201 28.032 142.921 27.84 143.561 27.456C144.201 27.072 144.713 26.496 145.097 25.728C145.481 24.928 145.673 23.968 145.673 22.848C145.673 21.696 145.481 20.752 145.097 20.016C144.713 19.248 144.201 18.672 143.561 18.288C142.921 17.904 142.201 17.712 141.401 17.712C140.601 17.712 139.881 17.904 139.241 18.288C138.601 18.672 138.089 19.248 137.705 20.016C137.321 20.752 137.129 21.696 137.129 22.848C137.129 23.968 137.321 24.928 137.705 25.728C138.089 26.496 138.601 27.072 139.241 27.456C139.881 27.84 140.601 28.032 141.401 28.032ZM159.1 36V9.744H169.42V17.664L167.74 15.408C168.54 13.36 169.82 11.824 171.58 10.8C173.34 9.776 175.452 9.264 177.916 9.264V18.864C177.436 18.8 177.004 18.752 176.62 18.72C176.268 18.688 175.9 18.672 175.516 18.672C173.884 18.672 172.54 19.104 171.484 19.968C170.46 20.8 169.948 22.256 169.948 24.336V36H159.1ZM193.797 36V2.4H209.973C213.109 2.4 215.813 2.912 218.085 3.936C220.389 4.96 222.165 6.432 223.413 8.352C224.661 10.24 225.285 12.48 225.285 15.072C225.285 17.664 224.661 19.904 223.413 21.792C222.165 23.68 220.389 25.152 218.085 26.208C215.813 27.232 213.109 27.744 209.973 27.744H200.085L205.125 22.896V36H193.797ZM205.125 24.144L200.085 19.008H209.253C210.821 19.008 211.973 18.656 212.709 17.952C213.477 17.248 213.861 16.288 213.861 15.072C213.861 13.856 213.477 12.896 212.709 12.192C211.973 11.488 210.821 11.136 209.253 11.136H200.085L205.125 6V24.144ZM241.576 36.48C238.6 36.48 235.96 35.904 233.656 34.752C231.384 33.568 229.592 31.952 228.28 29.904C226.968 27.856 226.312 25.504 226.312 22.848C226.312 20.192 226.968 17.84 228.28 15.792C229.592 13.744 231.384 12.144 233.656 10.992C235.96 9.84 238.6 9.264 241.576 9.264C244.552 9.264 247.192 9.84 249.496 10.992C251.8 12.144 253.592 13.744 254.872 15.792C256.184 17.84 256.84 20.192 256.84 22.848C256.84 25.504 256.184 27.856 254.872 29.904C253.592 31.952 251.8 33.568 249.496 34.752C247.192 35.904 244.552 36.48 241.576 36.48ZM241.576 28.032C242.376 28.032 243.096 27.84 243.736 27.456C244.376 27.072 244.888 26.496 245.272 25.728C245.656 24.928 245.848 23.968 245.848 22.848C245.848 21.696 245.656 20.752 245.272 20.016C244.888 19.248 244.376 18.672 243.736 18.288C243.096 17.904 242.376 17.712 241.576 17.712C240.776 17.712 240.056 17.904 239.416 18.288C238.776 18.672 238.264 19.248 237.88 20.016C237.496 20.752 237.304 21.696 237.304 22.848C237.304 23.968 237.496 24.928 237.88 25.728C238.264 26.496 238.776 27.072 239.416 27.456C240.056 27.84 240.776 28.032 241.576 28.032ZM269.548 36.48C267.308 36.48 265.1 36.24 262.924 35.76C260.748 35.28 258.988 34.656 257.644 33.888L260.62 26.736C261.868 27.472 263.308 28.048 264.94 28.464C266.604 28.88 268.22 29.088 269.788 29.088C271.1 29.088 271.98 28.976 272.428 28.752C272.908 28.528 273.148 28.224 273.148 27.84C273.148 27.456 272.876 27.184 272.332 27.024C271.788 26.832 271.068 26.688 270.172 26.592C269.276 26.496 268.284 26.384 267.196 26.256C266.14 26.096 265.068 25.872 263.98 25.584C262.892 25.296 261.9 24.864 261.004 24.288C260.108 23.712 259.388 22.944 258.844 21.984C258.3 20.992 258.028 19.744 258.028 18.24C258.028 16.576 258.524 15.072 259.516 13.728C260.54 12.384 262.044 11.312 264.028 10.512C266.044 9.68 268.524 9.264 271.468 9.264C273.388 9.264 275.308 9.44 277.228 9.792C279.148 10.144 280.796 10.688 282.172 11.424L279.196 18.576C277.852 17.84 276.524 17.344 275.212 17.088C273.932 16.8 272.732 16.656 271.612 16.656C270.236 16.656 269.292 16.784 268.78 17.04C268.3 17.296 268.06 17.584 268.06 17.904C268.06 18.288 268.332 18.576 268.876 18.768C269.42 18.96 270.14 19.104 271.036 19.2C271.932 19.296 272.908 19.424 273.964 19.584C275.052 19.712 276.124 19.936 277.18 20.256C278.268 20.544 279.26 20.976 280.156 21.552C281.052 22.128 281.772 22.912 282.316 23.904C282.86 24.864 283.132 26.096 283.132 27.6C283.132 29.168 282.636 30.64 281.644 32.016C280.652 33.36 279.148 34.448 277.132 35.28C275.116 36.08 272.588 36.48 269.548 36.48ZM298.128 36.48C294.512 36.48 291.696 35.616 289.68 33.888C287.664 32.128 286.656 29.44 286.656 25.824V3.84H297.504V25.728C297.504 26.528 297.712 27.152 298.128 27.6C298.576 28.048 299.12 28.272 299.76 28.272C300.688 28.272 301.504 28.032 302.208 27.552L304.8 35.088C303.968 35.568 302.96 35.92 301.776 36.144C300.624 36.368 299.408 36.48 298.128 36.48ZM283.056 19.104V11.184H302.88V19.104H283.056ZM316.846 36.48C314.606 36.48 312.398 36.24 310.222 35.76C308.046 35.28 306.286 34.656 304.942 33.888L307.918 26.736C309.166 27.472 310.606 28.048 312.238 28.464C313.902 28.88 315.518 29.088 317.086 29.088C318.398 29.088 319.278 28.976 319.726 28.752C320.206 28.528 320.446 28.224 320.446 27.84C320.446 27.456 320.174 27.184 319.63 27.024C319.086 26.832 318.366 26.688 317.47 26.592C316.574 26.496 315.582 26.384 314.494 26.256C313.438 26.096 312.366 25.872 311.278 25.584C310.19 25.296 309.198 24.864 308.302 24.288C307.406 23.712 306.686 22.944 306.142 21.984C305.598 20.992 305.326 19.744 305.326 18.24C305.326 16.576 305.822 15.072 306.814 13.728C307.838 12.384 309.342 11.312 311.326 10.512C313.342 9.68 315.822 9.264 318.766 9.264C320.686 9.264 322.606 9.44 324.526 9.792C326.446 10.144 328.094 10.688 329.47 11.424L326.494 18.576C325.15 17.84 323.822 17.344 322.51 17.088C321.23 16.8 320.03 16.656 318.91 16.656C317.534 16.656 316.59 16.784 316.078 17.04C315.598 17.296 315.358 17.584 315.358 17.904C315.358 18.288 315.63 18.576 316.174 18.768C316.718 18.96 317.438 19.104 318.334 19.2C319.23 19.296 320.206 19.424 321.262 19.584C322.35 19.712 323.422 19.936 324.478 20.256C325.566 20.544 326.558 20.976 327.454 21.552C328.35 22.128 329.07 22.912 329.614 23.904C330.158 24.864 330.43 26.096 330.43 27.6C330.43 29.168 329.934 30.64 328.942 32.016C327.95 33.36 326.446 34.448 324.43 35.28C322.414 36.08 319.886 36.48 316.846 36.48Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAuthorPosts);\nexport default __webpack_public_path__ + \"static/media/Author-Posts.9878c7065128a9a9fa4d9e8247694e02.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// 컴포넌트\r\nimport ProductCardList from \"../../components/Product/ProductCardList\";\r\nimport PostCardList from \"../../components/Post/PostCardList\";\r\n\r\n// 이미지\r\nimport pointEdgeProfile from \"../../assets/point-edge-profile.svg\";\r\nimport authorProducts from \"../../assets/Author-Products.svg\";\r\nimport authorPosts from \"../../assets/Author-Posts.svg\";\r\n\r\nimport { Accountname_I } from \"../../interface\";\r\n\r\nfunction ProfileRightUI({ accountname }: Accountname_I) {\r\n  // 상품 목록, 게시글 목록 탭\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const handleTabClick = (tabNumber: number) => {\r\n    setActiveTab(tabNumber);\r\n  };\r\n\r\n  return (\r\n    <ProfileRight>\r\n      {activeTab === 1 && (\r\n        <h2>\r\n          <img src={authorProducts} alt=\"사용자 상품 목록\" />\r\n        </h2>\r\n      )}\r\n      {activeTab === 2 && (\r\n        <h2>\r\n          <img src={authorPosts} alt=\"사용자 게시글 목록\" />\r\n        </h2>\r\n      )}\r\n\r\n      <TabMenu>\r\n        <TabBtn className={activeTab === 1 ? \"active\" : \"\"} onClick={() => handleTabClick(1)}>\r\n          상품 목록\r\n        </TabBtn>\r\n        <TabBtn className={activeTab === 2 ? \"active\" : \"\"} onClick={() => handleTabClick(2)}>\r\n          게시글 목록\r\n        </TabBtn>\r\n      </TabMenu>\r\n      {activeTab === 1 && <ProductCardList profile={true} accountname={accountname ? String(accountname) : \"\"} />}\r\n      {activeTab === 2 && <PostCardList accountname={accountname} />}\r\n    </ProfileRight>\r\n  );\r\n}\r\n\r\nexport default React.memo(ProfileRightUI);\r\n\r\nconst ProfileRight = styled.section`\r\n  & > h2 {\r\n    position: relative;\r\n    margin-left: 30px;\r\n    margin-top: 168px;\r\n\r\n    &::before {\r\n      content: \"\";\r\n      display: inline-block;\r\n      position: absolute;\r\n      top: -35px;\r\n      left: -34px;\r\n      width: 95px;\r\n      height: 40px;\r\n      background: url(${pointEdgeProfile}) no-repeat center/contain;\r\n      vertical-align: bottom;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TabMenu = styled.div`\r\n  width: 220px;\r\n  margin: 70px 0 30px;\r\n  position: relative;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  gap: 20px;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: inline-block;\r\n    width: 1px;\r\n    height: 70%;\r\n    background-color: var(--gray300-color);\r\n    position: absolute;\r\n    top: 5px;\r\n    left: 103px;\r\n  }\r\n\r\n  button.active {\r\n    font-family: var(--font--semibold);\r\n    color: black;\r\n  }\r\n`;\r\nconst TabBtn = styled.button`\r\n  padding: 8px 12px;\r\n  color: var(--gray500-color);\r\n  cursor: pointer;\r\n`;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport PostSkeleton from './PostSkeleton';\r\nimport SkeletonItem from '../SkeletonItem';\r\n\r\nexport default function ProfileSkeleton() {\r\n  return (\r\n    <>\r\n      <ProfileLeft>\r\n        <SkeletonProfileImage />\r\n        <SkeletonUserName />\r\n        <SkeletonId />\r\n        <SkeletonOther />\r\n      </ProfileLeft>\r\n      <ProfileRight>\r\n        <TabMenu />\r\n        {/* PostSkeleton 이렇게 밖에 못쓰나? */}\r\n        <ProfileRightGrid>\r\n          <PostSkeleton />\r\n          <PostSkeleton />\r\n          <PostSkeleton />\r\n        </ProfileRightGrid>\r\n      </ProfileRight>\r\n    </>\r\n  )\r\n}\r\n\r\n// 왼쪽\r\nconst ProfileLeft = styled.section`\r\n  width: 370px;\r\n  height: fit-content;\r\n  padding: 60px 24px 45px;\r\n  background-color: #fff;\r\n  border: 1px solid var(--gray300-color);\r\n  border-radius: 10px;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  margin-bottom: 120px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst SkeletonProfileImage = styled(SkeletonItem)`\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  margin: 0 auto 18px;\r\n`;\r\n\r\nconst SkeletonUserName = styled(SkeletonItem)`\r\n  width: 136px;\r\n  height: 25px;\r\n  margin: 0 auto 12px;\r\n`;\r\n\r\nconst SkeletonId = styled(SkeletonItem)`\r\n  width: 107px;\r\n  height: 18px;\r\n  margin: 0 auto 38px;\r\n`;\r\n\r\nconst SkeletonOther = styled(SkeletonItem)`\r\n  width: 100%;\r\n  height: 200px;\r\n`;\r\n\r\n// 오른쪽\r\nconst ProfileRight = styled.section`\r\n  margin-top: 220px;\r\n`\r\n\r\nconst ProfileRightGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: auto;\r\n  gap: 60px 30px;\r\n  margin-bottom: 120px;\r\n`\r\n\r\nconst TabMenu = styled(SkeletonItem)`\r\n  width: 220px;\r\n  height: 25px;\r\n  margin: 70px 0 30px;\r\n  position: relative;\r\n`;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\n// 리코일\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { checkFollow } from \"../recoil\";\r\n\r\n// api\r\nimport { accountProfileAPI } from \"../api\";\r\n\r\n// 컴포넌트\r\nimport Layout from \"../layout/Layout\";\r\nimport ProfileLeftUI from \"../layout/profileLayout/ProfileLeftUI\";\r\nimport ProfileRightUI from \"../layout/profileLayout/ProfileRightUI\";\r\nimport ProfileSkeleton from \"../style/skeletonUI/skeletonPage/ProfileSkeleton\";\r\n\r\nimport { ProfileInfo_I } from \"../interface\";\r\n\r\nexport default function Profile() {\r\n  const { accountname } = useParams();\r\n  const [loading, setLoading] = useState(true);\r\n  const [profileData, setProfileData] = useState<ProfileInfo_I | undefined>(undefined);\r\n  const checkFollowChange = useRecoilValue(checkFollow);\r\n\r\n  useEffect(() => {\r\n    const getProfileData = async () => {\r\n      if (typeof accountname === \"string\") {\r\n        const res = await accountProfileAPI({ accountname });\r\n        setProfileData(res);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    getProfileData();\r\n  }, [accountname, checkFollowChange]);\r\n\r\n  return (\r\n    <Layout reduceTop={true}>\r\n      <ProfileWrap>\r\n        {loading ? (\r\n          <ProfileSkeleton />\r\n        ) : (\r\n          <>\r\n            <ProfileLeftUI setProfileData={setProfileData} profileData={profileData} />\r\n            <ProfileRightUI accountname={accountname} />\r\n          </>\r\n        )}\r\n      </ProfileWrap>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nconst ProfileWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 0.4fr auto;\r\n  grid-template-rows: auto;\r\n  gap: 30px;\r\n\r\n  padding: 90px 60px 0 80px;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 330px;\r\n    background: #000;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SkeletonItem from \"../SkeletonItem\";\r\n\r\nexport default function PostSkeleton() {\r\n  return (\r\n    <SkeletotnPost>\r\n      <SkeletonUserLayout>\r\n        <SkeletonProfileImage />\r\n        <div>\r\n          <SkeletonUserName />\r\n          <SkeletonId />\r\n        </div>\r\n      </SkeletonUserLayout>\r\n      <SkeletonPostImage />\r\n    </SkeletotnPost>\r\n  );\r\n}\r\n\r\nconst SkeletotnPost = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst SkeletonUserLayout = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst SkeletonProfileImage = styled(SkeletonItem)`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nconst SkeletonUserName = styled(SkeletonItem)`\r\n  width: 136px;\r\n  height: 18px;\r\n  margin-bottom: 2px;\r\n`;\r\n\r\nconst SkeletonId = styled(SkeletonItem)`\r\n  width: 107px;\r\n  height: 14px;\r\n`;\r\n\r\nconst SkeletonPostImage = styled(SkeletonItem)`\r\n  width: 100%;\r\n  height: 280px;\r\n`;\r\n"],"names":["NoPostsUI","_jsxs","PostNull","children","_jsx","src","productNull","alt","styled","div","_templateObject","_taggedTemplateLiteral","ProductCard","_ref","profile","name","email","img","title","description","price","id","handleClick","useRef","myaccount_name","useRecoilValue","accountname","temp","useParams","account_name","_useState","useState","_useState2","_slicedToArray","isHidden","setIsHidden","_useState3","_useState4","showModal","setShowModal","handleModal","useEffect","handleClickOutside","e","localNavElement","document","getElementById","contains","target","current","addEventListener","removeEventListener","CardWrap","CardTop","ProfileUI","user_profile","user_name","card","onClick","prevState","postMenu","ref","LocalNavWrap","LocalNav","width","lists","nav","concat","Link","to","CardContent","toString","replace","Modal","postId","text","buttonText1","buttonText2","showCloseButton","section","_templateObject2","_templateObject3","figure","_templateObject4","IntroUI","profileData","handleEditClick","navigate","useNavigate","myAccount","_Fragment","IntroWrap","checkImageUrl","image","username","ButtonLineIcon","basic","BtnWrap","bg","color","br","ButtonFollow","isFollow","isfollow","accountName","padding","intro","Follow","followerData","followingData","activeFollow","scrollContainer","querySelector","scrollTop","FollowWrap","followers","following","length","className","map","follow","FollowLi","user_email","_id","FollowNull","followSymbol","article","li","FollowListUI","setActiveFollow","setFollowingData","_useState5","_useState6","setFollowerData","handleFollowClick","followNumber","fetchFollowingData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","followingAPI","sent","_toConsumableArray","stop","apply","arguments","fetchFollowerData","_ref3","_callee2","_context2","followerAPI","FollowDiv","followerCount","followingCount","UpdateProfile","setIsEditing","setProfileData","changeImageURL","setChangeImageURL","userName","setUserName","setIntro","handleImageChange","file","imgSrc","type","files","uploadImageAPI","_x","handleInputChange","_e$target","value","ProfileDiv","style","display","accept","onChange","htmlFor","ProfileImgWrap","PlusBtnImg","cursor","Form","onSubmit","preventDefault","updatedProfileData","_objectSpread","updateProfile","Label","Input","required","placeholder","Button","fontSize","form","label","ProfileLeftUI","isEditing","ProfileLeft","ProductCardList","checkDelete","checkDeletePost","productGetData","setproductGetData","productGet","productListAPI","product","t0","console","error","CardList","productInfo","author","BASE_URL","itemImage","split","itemName","link","_ref4","_ref5","getElapsedTime","createdAt","currentTime","Date","createdDateTime","elapsedMilliseconds","getTime","msInMinute","msInSecond","msInHour","msInDay","days","Math","floor","hours","minutes","seconds","elapsedTimeString","PostCard","profileImage","content","hearted","heartCount","heartValue","setHeartValue","PostTop","mainprofile","prevIsHidden","PostContent","ButtonPostLike","liked","PostCardList","userPostList","setUserPostList","fetchPostData","postListAPI","post","log","PostListWrap","ProfileRightUI","activeTab","setActiveTab","handleTabClick","tabNumber","ProfileRight","authorProducts","authorPosts","TabMenu","TabBtn","String","React","pointEdgeProfile","button","ProfileSkeleton","SkeletonProfileImage","SkeletonUserName","SkeletonId","SkeletonOther","ProfileRightGrid","PostSkeleton","SkeletonItem","_templateObject5","_templateObject6","_templateObject7","_templateObject8","Profile","loading","setLoading","undefined","checkFollowChange","checkFollow","getProfileData","res","accountProfileAPI","Layout","reduceTop","ProfileWrap","SkeletotnPost","SkeletonUserLayout","SkeletonPostImage"],"sourceRoot":""}